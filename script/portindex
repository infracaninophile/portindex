#!/usr/bin/perl -w

# Copyright (c) 2004 Matthew Seaman. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#    1.  Redistributions of source code must retain the above
#        copyright notice, this list of conditions and the following
#        disclaimer.
#
#    2.  Redistributions in binary form must reproduce the above
#        copyright notice, this list of conditions and the following
#        disclaimer in the documentation and/or other materials
#        provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
# USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

# @(#) $Id: portindex,v 1.18 2004-10-12 22:02:57 matthew Exp $
#

# Scan through the ports tree (or parts thereof) running 'make
# describe' for each port, and caching the results.  Then combine the
# cached descriptions into the INDEX file used by the ports system.
# Obtaining all of the port descriptions is equivalent to running
# 'make index'.  Incremental updates (via just updating the
# descriptions of modified ports) will be much faster than rebuilding
# the whole thing from scratch.
use strict;
use warnings;
use POSIX qw(strftime);

use FreeBSD::Port;
use FreeBSD::Ports::Tree;

our $verbose;

$0 =~ s@.*/@@;    # Script name for error messages
$::verbose = 1;   # Be garrulous.

MAIN:
{
    my $tree;
    my $allports;
    my $masterslave;
    my @updaters;

    $tree =
      FreeBSD::Ports::Tree->new( -Filename => '/var/tmp/portindex-cache.db' );

    # If one of the ports given in the @updaters list is the master of
    # several slave ports, add all of those slave ports to the
    # @updaters list, unconditionally.  This only works if the cache
    # is largely complete -- it's a null op when building the cache
    # from scratch.

    $masterslave = $tree->masterslave();

    # Update the entries for the ports read from STDIN, plus the
    # slaves of any masters listed.

    while (<>) {
        chomp;
        push @updaters, $_;

        push @updaters, @{ $masterslave->{$_} }
          if ( defined $masterslave->{$_} );
    }

    # Regenerate the FreeBSD::Port objects for all listed ports (or
    # the whole tree beneath some directory).

    $tree->scan_makefiles(@updaters);

    # Unfreeze the cached ports data

    $allports = $tree->springtime();

    $tree->accumulate_dependencies($allports);

    $tree->print_index( $allports, *STDOUT );
}

#
# That's All Folks!
#
