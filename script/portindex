#!/usr/bin/perl -w

# Copyright (c) 2004 Matthew Seaman. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#    1.  Redistributions of source code must retain the above
#        copyright notice, this list of conditions and the following
#        disclaimer.
#
#    2.  Redistributions in binary form must reproduce the above
#        copyright notice, this list of conditions and the following
#        disclaimer in the documentation and/or other materials
#        provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
# USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

# @(#) $Id: portindex,v 1.12 2004-10-08 21:17:03 matthew Exp $
#
# Read the ports index file and parse it into a series of
# objects. Scan the ports tree for updates since the last index was
# built, run 'make describe' for those ports, integrate the results
# with the rest of the INDEX data, plus delete the data for any ports
# deleted from the tree.  Print out an updated INDEX file.

use strict;
use warnings;
use POSIX qw(strftime);
use File::Find;
use vars qw($base $verbose);

use FreeBSD::Port;
use FreeBSD::Ports::Tree;

$0 =~ s@.*/@@;    # Script name for error messages
$::verbose = 1;   # Be garrulous.

#-------------------------------------------------------------------------

# Compare version of the pkg data read from the INDEX ($pkg) with
# what's on disk ($dir), moving the leaf entries from $oldports to
# $newports and modifying the contents accordingly.  Create any
# missing entries.
sub process_pkg($$$$)
{
    my $oldports = shift;
    my $newports = shift;
    my $dir      = shift;
    my $pkg      = shift;
    my $pkgx;

    # if this is a new port, $pkg and $pkgx should both be undef...
    $pkgx = $oldports->delete($dir);

    if ( defined($pkgx) != defined($pkg) && $pkgx != $pkg ) {
        warn "$0: it's all gone horribly wrong! $pkg != $pkgx\n";
    }

    # [...]

    $newports->insert( $dir, $pkg );

    return;
}

#-------------------------------------------------------------------------

MAIN:
{
    my $tree;

    $tree = FreeBSD::Ports::Tree->new();

    # $tree->read_index(*STDIN);

    $tree->scan_makefiles('/usr/ports');

    # Scan through the Makefiles in the ports tree looking for ports
    # which have files updated more recently than the current ports
    # INDEX.  Compare the 'SUBDIR' links in the Makefiles with the
    # port origins to find added or deleted ports

    $tree->print(*STDOUT);
}

#
# That's All Folks!
#
