#!/usr/bin/perl -w

# Copyright (c) 2004 Matthew Seaman. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#    1.  Redistributions of source code must retain the above
#        copyright notice, this list of conditions and the following
#        disclaimer.
#
#    2.  Redistributions in binary form must reproduce the above
#        copyright notice, this list of conditions and the following
#        disclaimer in the documentation and/or other materials
#        provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
# USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

# @(#) $Id: portindex,v 1.23 2004-10-19 12:51:31 matthew Exp $
#
# Process the cached 'make describe' output to produce an INDEX file
# Should be a lot quicker than 'make index'.
#
# TODO:
#
# Documentation, documentation, documentation.

use strict;
use warnings;

use FreeBSD::Portindex qw(read_config);
use FreeBSD::Port;
use FreeBSD::Ports::Tree;

our %Config;
our $pkgname = 'portindex';

$0 =~ s@.*/@@;    # Script name for error messages

MAIN:
{
    my $tree;
    my %allports;

    read_config( \%Config );

    $tree = FreeBSD::Ports::Tree->new(
        -Env           => { -Home => $Config{CacheDir}, },
        -CacheFilename => $Config{CacheFilename},
        -MasterSlaveFilename => $Config{MasterSlaveFilename},
    );

    # Redirect STDOUT if required
    if ( $Config{Output} ne '-' ) {
        open STDOUT, '>', $Config{Output}
          or die "$0: Can't open output $Config{Output} -- $!\n";
    }

    # Unfreeze the cached ports data

    $tree->springtime( \%allports );

    $tree->accumulate_dependencies( \%allports );

    $tree->print_index( \%allports, *STDOUT );
}

__END__

=head1 NAME

portindex -- generate an INDEX file from cached data
	
=head1 SYNOPSIS

portindex [options]
	
=head1 OPTIONS

=over 8

=item B<--help>

Print a brief usage message and exit.

=item B<--verbose>

Turn on verbose output printed to STDERR.

=back
	
=head1 DESCRIPTION

B<portindex> processes the cached 
	
=cut
	
#
# That's All Folks!
#
