#!/usr/bin/perl -w

# Copyright (c) 2004 Matthew Seaman. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#    1.  Redistributions of source code must retain the above
#        copyright notice, this list of conditions and the following
#        disclaimer.
#
#    2.  Redistributions in binary form must reproduce the above
#        copyright notice, this list of conditions and the following
#        disclaimer in the documentation and/or other materials
#        provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS''
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
# USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

# @(#) $Id: cache-init,v 1.9 2004-10-26 17:05:20 matthew Exp $
#

# Build the portindex cache from scratch by scanning through the whole
# ports tree.  This only needs to be done once (or at infrequent
# intervals), which is a good thing, because this implementation is
# significantly slower than 'make index'.

use strict;
use warnings;
use BerkeleyDB;

use FreeBSD::Portindex::Config qw(read_config update_timestamp);
use FreeBSD::Portindex::Port;
use FreeBSD::Portindex::Tree;

our %Config;
our $pkgname = 'portindex';

$0 =~ s@.*/@@;    # Script name for error messages

MAIN:
{
    my $tree;

    read_config( \%Config );

    # Attempt to create the cache dir if it doesn't exist.  The
    # populate it.  First, move aside any pre-existing .db files.
    # Delete the old __db.00N files as they only apply to the old
    # version, and will be automatically recreated as necessary.

    mkdir $Config{CacheDir}, 0755
      or die "$0: Can't create $Config{CacheDir} -- $!"
      unless ( -d $Config{CacheDir} );

    chdir $Config{CacheDir}
      or die "$0: Can't chdir to ", $Config{CacheDir}, " -- $!";
    unlink <__db.0??>;
    for my $f (qw( CacheFilename MasterSlaveFilename )) {
        if ( -e $Config{$f} ) {
            rename $Config{$f}, $Config{$f} . ".old"
              or die "$0: Can't make backup of ", $Config{$f}, " -- $!";
        }
    }

    $tree = FreeBSD::Portindex::Tree->new(
        -Env => {
            -Home => $Config{CacheDir},
            -Mode => 0644,
        },
        -Flags               => DB_CREATE,
        -CacheFilename       => $Config{CacheFilename},
        -MasterSlaveFilename => $Config{MasterSlaveFilename},
    );

    # Mark the time that the session starts

    update_timestamp();

    # Regenerate the FreeBSD::Portindex::Port objects for all listed
    # ports (or the whole tree beneath some directory).

    $tree->scan_makefiles( $Config{PortsDir} );
}

__END__

=head1 NAME

cache-init -- Generate the portsindex cache by scanning the entire ports tree

=head1 SYNOPSIS

B<cache-init> [B<-hvq>] [B<-p> F<dir>] [B<-c> F<dir>] [B<-C> F<file>] [B<-M> F<file>]

=head1 DESCRIPTION

B<cache-init> scans over the entire ports tree to initialise the
B<portindex> cache.  The cache consists of two Bekeley DB Btree files.
The first contains records of all of the one-line port descriptions
generated by C<make describe> and indexed by the port origin
directory.  The second contains a record of all slave ports, linking
each of them to their master port.

B<cache-init> is used to bootstrap the B<portindex> data cache on a
new system.  It only needs to be run one time, after which
B<cache-update> may be used to apply incremenal updates to the data
cache.  As B<cache-init> is fairly slow to execute, dealing as it does
with some 11,000 separate ports, running it repeatedly is a handy way
to waste a great deal of time.

B<cache-init> will preserve a backup copy of any pre-existing cache
files by renaming them with a F<.old> suffix.

=head2 Configuration Files

B<cache-init> shares configuration files with B<cache-update> and
B<portindex>.  Any configuration settings are taken from the following
locations, where the later items on this list override the former:

=over 8

=item *

Built-in settings from the B<FreeBSD::Portindex::Config> perl module.

=item *

The system wide configuration file F</usr/local/etc/portindex.cfg>

=item *

The per-user configuration file F<${HOME}/.portindexrc>

=item *

The local configuration file, found in the current working directory
of the B<cache-init> process F<./.portindexrc>

=item *

The program command line.

=back

All of the configuration files are optional.  A summary of the
resultant configuration options including the effect of any command
line settings is printed as part of the help text when B<cache-init>
is invoked with the C<-h> option.

=head1 OPTIONS

=over 8

=item B<-h>

=item B<--help>

Print a brief usage message and a summary of the configuration
settings after command line processing and then exit.

=item B<-v>

=item B<--verbose>

Turn on verbose output printed to C<STDERR>.

=item B<-q>

=item B<--quiet>

=item B<--noverbose>

Turn off verbose output to C<STDERR>.  Using both the B<-v> amd B<-q>
options together does not make any sense, but neither does it generate
an error.  The last mentioned of the two options will prevail.

=item B<-p> F<dir>

=item B<--ports-dir>=F<dir>

The location of the ports tree, almost always F</usr/ports>.

=item B<-c> F<dir>

=item B<--cache-dir>=F<dir>

The location of the B<portindex> data caches, by default
F</var/tmp/portindex> at the moment, but probably moving to
F</var/db/portindex> once version 1.0 is released.

=item B<-C> F<file>

=item B<--cache-file>=F<file>

Berkeley DB Btree file containing the cached output of C<make
describe> for all of the ports in the tree.  This file name will be
relative to the cache directory (B<-c> option above) unless an
absolute path is given.  As for the main cache file, the file name is
relative to the cache directory unless an absolute path is given.
Defaults to F<portindex-cache.db>.

=item B<-M> F<file>

=item B<--master-slave-file>=F<file>

Berkeley DB Btree file containing the port origins of all slave ports
referenced to their master ports.  A slave port is defined as one
where the C<MASTERDIR> B<make> variable does not have a value that
resolves to the same as the port origin directory. Defaults to
F<portindex-masterslave.db>.

=item B<-T> F<file>

=item B<--timestamp-file>=F<file>

A file within the cache directory whose modification time marks the
last time that data was modified in or added to the cache.  =back

=head1 FILES

=over 16

=item F</usr/ports>

The default ports directory.

=item F</var/tmp/portindex>

The location of the data caches.  Temporary during testing -- the
default location will probably move to F</var/db/portindex>.

=item F<portindex-cache.db>

Btree file containing cached C<make describe> output.

=item F<portindex-masterslave.db>

Btree file containing details of master-slave relationships between ports.

=item F<__db.001>, F<__db.002>, F<__db.003>

Files used as part of the internal workings of BerkeleyDB, for memory
pool management and DB locking.  Will be recreated automatically if
deleted.

=item F</usr/local/etc/portindex.cfg>

System-wide configuration file.

=item F<${HOME}/.portindexrc>

Per-user configuration file

=item F<./.portindexrc>

Local configuration file

=back

=head1 SEE ALSO

L<portindex(1)>, L<cache-update(1)>, L<cvsup(1)>, L<ports(7)>

=head1 BUGS

B<cache-init> is quite a lot slower than C<make index>.  Possible
improvements include running several C<make describe> processes
concurrently and abstracting the perl code from F<bsd.ports.mk> used
to transform the B<make> variables into the one line C<make describe>
output.  That would save having to call B<make> twice per port -- once
to run C<make describe> and a second time to run C<make -V MASTERDIR>,
plus avoid B<make> running another B<perl> process internally.

=cut

#
# That's All Folks!
#
