# This file contains -*- perl -*- code
#
# @(#) $Id: portindex.cfg.sample,v 1.13 2007-07-25 16:49:30 matthew Exp $
#
# Sample configuration file for portindex, cache-init, cache-update
#

## Copy this file to any of /usr/local/etc/portindex.cfg,
## ${HOME}/.portindexrc or ./.portindexrc (ie. the CWD where any of
## the portindex processes are run), and edit the configuration
## settings to taste, to set the appropriate entries in the global
## %::Config hash.

## Available configuration and command line options are listed,
## indicating which programs they affect.  The default values are
## shown, commented out.  All options can be overriden from the
## command line.

## cache-init, cache-update, find-updated (-p, --ports-dir): Base
## directory of the ports tree, same as the PORTSDIR environment
## variable.

# $::Config{PortsDir} = $ENV{PORTSDIR} || '/usr/ports';

## cache-update (-d, --ports-dbdir): Where OPTIONS settings are
## stored, same as the PORTS_DBDIR environment variable.

# $::Config{PortsDBDir} = $ENV{PORTS_DBDIR} || '/var/db/ports';

## all (-c, --cache-dir): Directory where BDB btree files containing
## the cache and master-slave relationships are stored.

# $::Config{CacheDir} = '/var/db/portindex';

## all (-C, --cache-file): BDB btree file within the CacheDir
## containing the cached 'make describe' output.

# $::Config{CacheFilename} = 'portindex-cache.db';

## cache-init, cache-update (-s, --scrub-environment,
## --noscrub-environment): Boolean -- delete everything from the
## environment except for USER, HOME, PATH, SHELL, TERM, TERMCAP if
## true.  Default no or if value set to false.

# $::Config{ScrubEnvironment} = 0;

## all (-v, -q, --verbose, --noverbose, --quiet): Boolean -- turn on
## verbose output if true, turn off if false or undef

# $::Config{Verbose} = 1;

## cache-update (-i, --input): Filename to read input from, '-' for
## STDIN

# $::Config{Input} = '-';

## portindex (-o, --output): Filename to write the INDEX data out to,
## '-' for STDOUT

# $::Config{Output} = '-';

## cache-update (--input-format, --format): What format to treat the
## input data as.  Choices are:
##    plain           -- a list of port directory origins, one per line
##    cvsup-output    -- Output from running cvsup(1) with at least -L1
##    cvsup-checkouts -- The cvsup(1) checkouts or list file
##    options         -- Scan the contents of PORTS_DBDIR to find port
##                       OPTIONS settings changed more recently than the
##                       data in the ports cache.

## Additionally you can append ',options' to any of the first three
## make cache-update scan for changes to port OPTIONS as well as
## using the primary input mechanism.

## If the cvsup-checkouts format is chosen, the input file will
## usually be /var/db/sup/ports-all/checkouts.cvs:.

# $::Config{Format} = 'cvsup-output,options';

## cache-update (-P, --propagation-delay): A fudge factor to account
## for the time required between a change being committed to the
## FreeBSD CVS repository, and when that change gets propagated out to
## the local cvsup(1) server -- how many seconds older than the last
## time cache-update was run can the mtime of files checked out in the
## tree be and have them still considered newly updated?  About 3600
## seconds (1 hour) seems to be a good value.

# $::Config{PropagationDelay} = 60 * 60;

## all (-T, --timestamp-file): Filename within CacheDir used to mark
## the last time any updates to the cache were made.

# $::Config{TimestampFile} = 'portindex-timestamp';

## cache-update, cache-init (-M, --ubiquitous-makefile): List of
## Makefiles included by all or the vast majority of ports.
## cache-update will emit a warning if any Makefile on this list has
## been modified since the last time the cache was updated, saying
## that it might be preferable to re-initialise the cache from scratch
## using cache-init(1) rather than trying to do an incremental update.

## Neither cache-init(1) nor cache-update(1) will store any of these
## filenames within the cache.  Default: /usr/ports/Mk/bsd.port.mk,
## /etc/make.conf (Note: non-absolute paths are taken as relative to
## $::Config{PortsDir})

# $::Config{UbiquitousMakefiles} = [ 'Mk/bsd.port.mk', '/etc/make.conf', ];

## cache-update, cache-init (-m --endemic-makefile): List of Makefiles
## from within $::Config{PortsDir} whose inclusion or modification is
## assumed to have no effect on the resulting INDEX file, hence those
## file names will not be stored in the cache. (Note: non-absolute
## paths are taken as relative to $::Config{PortsDir})

# $::Config{EndemicMakefiles} = [ 'Mk/bsd.sites.mk', ];

## portindex (-W --crunch-white --nocrunch-white): Boolean. If true,
## emulate 'make index' more closely by converting multiple whitespace
## into single spaces in the port comment field.  This has a purely
## cosmetic effect on the output INDEX and doesn't affect the cache
## contents.

# $::Config{CrunchWhitespace} = 0;

## cache-init, cache-update (-j --workers): How many worker processes
## to spawn.  This is purely a performance tuning control. Experiment
## with this number to find the best result, which will depend on how
## many processor cores you have available, the speed of your disk IO
## and various other parameters.  Default: 3

# $::Config{WorkerProcesses} = 3;

##
## That's All Folks!
##
